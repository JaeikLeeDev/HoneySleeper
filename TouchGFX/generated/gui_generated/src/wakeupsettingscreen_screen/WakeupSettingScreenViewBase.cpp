/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/wakeupsettingscreen_screen/WakeupSettingScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

WakeupSettingScreenViewBase::WakeupSettingScreenViewBase() :
    buttonCallback(this, &WakeupSettingScreenViewBase::buttonCallbackHandler),
    updateItemCallback(this, &WakeupSettingScreenViewBase::updateItemCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    background.setXY(0, 0);
    background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_WAKEUPSETTINGSCREEN_ID));

    buttonCancel.setXY(14, 7);
    buttonCancel.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTONCANCELDONERELEASED_ID), touchgfx::Bitmap(BITMAP_BUTTONCANCELDONEPRESSED_ID));
    buttonCancel.setLabelText(touchgfx::TypedText(T___SINGLEUSE_DA0Y));
    buttonCancel.setLabelColor(touchgfx::Color::getColorFromRGB(51, 51, 51));
    buttonCancel.setLabelColorPressed(touchgfx::Color::getColorFromRGB(17, 17, 17));
    buttonCancel.setAlpha(230);
    buttonCancel.setAction(buttonCallback);

    buttonDone.setXY(421, 7);
    buttonDone.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTONCANCELDONERELEASED_ID), touchgfx::Bitmap(BITMAP_BUTTONCANCELDONEPRESSED_ID));
    buttonDone.setLabelText(touchgfx::TypedText(T___SINGLEUSE_BVCT));
    buttonDone.setLabelColor(touchgfx::Color::getColorFromRGB(51, 51, 51));
    buttonDone.setLabelColorPressed(touchgfx::Color::getColorFromRGB(17, 17, 17));
    buttonDone.setAlpha(230);

    toggleButtonAlarmUse.setXY(249, 188);
    toggleButtonAlarmUse.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_OFF_ID), touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_ON_ID));
    toggleButtonAlarmUse.setAlpha(200);

    textAreaAlarmUse.setXY(33, 198);
    textAreaAlarmUse.setColor(touchgfx::Color::getColorFromRGB(17, 17, 17));
    textAreaAlarmUse.setLinespacing(0);
    textAreaAlarmUse.setAlpha(230);
    textAreaAlarmUse.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FD14));

    toggleButtonLightUse.setXY(249, 131);
    toggleButtonLightUse.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_OFF_ID), touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_ON_ID));
    toggleButtonLightUse.setAlpha(200);

    textAreaLightUse.setXY(33, 141);
    textAreaLightUse.setColor(touchgfx::Color::getColorFromRGB(17, 17, 17));
    textAreaLightUse.setLinespacing(0);
    textAreaLightUse.setAlpha(230);
    textAreaLightUse.setTypedText(touchgfx::TypedText(T___SINGLEUSE_N3EO));

    scrollWheelWkaeupMin.setPosition(172, 80, 25, 30);
    scrollWheelWkaeupMin.setHorizontal(false);
    scrollWheelWkaeupMin.setCircular(false);
    scrollWheelWkaeupMin.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
    scrollWheelWkaeupMin.setSwipeAcceleration(10);
    scrollWheelWkaeupMin.setDragAcceleration(10);
    scrollWheelWkaeupMin.setNumberOfItems(60);
    scrollWheelWkaeupMin.setSelectedItemOffset(0);
    scrollWheelWkaeupMin.setDrawableSize(30, 0);
    scrollWheelWkaeupMin.setDrawables(scrollWheelWkaeupMinListItems, updateItemCallback);
    scrollWheelWkaeupMin.animateToItem(0, 0);

    scrollWheelWkaeupHour.setPosition(145, 80, 25, 30);
    scrollWheelWkaeupHour.setHorizontal(false);
    scrollWheelWkaeupHour.setCircular(false);
    scrollWheelWkaeupHour.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
    scrollWheelWkaeupHour.setSwipeAcceleration(10);
    scrollWheelWkaeupHour.setDragAcceleration(10);
    scrollWheelWkaeupHour.setNumberOfItems(24);
    scrollWheelWkaeupHour.setSelectedItemOffset(0);
    scrollWheelWkaeupHour.setDrawableSize(30, 0);
    scrollWheelWkaeupHour.setDrawables(scrollWheelWkaeupHourListItems, updateItemCallback);
    scrollWheelWkaeupHour.animateToItem(8, 0);

    textAreaWakeupAt.setXY(33, 85);
    textAreaWakeupAt.setColor(touchgfx::Color::getColorFromRGB(17, 17, 17));
    textAreaWakeupAt.setLinespacing(0);
    textAreaWakeupAt.setAlpha(230);
    textAreaWakeupAt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3IFJ));

    textAreaColon.setXY(168, 85);
    textAreaColon.setColor(touchgfx::Color::getColorFromRGB(17, 17, 17));
    textAreaColon.setLinespacing(0);
    textAreaColon.setAlpha(230);
    textAreaColon.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TBGZ));

    add(__background);
    add(background);
    add(buttonCancel);
    add(buttonDone);
    add(toggleButtonAlarmUse);
    add(textAreaAlarmUse);
    add(toggleButtonLightUse);
    add(textAreaLightUse);
    add(scrollWheelWkaeupMin);
    add(scrollWheelWkaeupHour);
    add(textAreaWakeupAt);
    add(textAreaColon);
}

void WakeupSettingScreenViewBase::setupScreen()
{
    scrollWheelWkaeupMin.initialize();
    for (int i = 0; i < scrollWheelWkaeupMinListItems.getNumberOfDrawables(); i++)
    {
        scrollWheelWkaeupMinListItems[i].initialize();
    }
    scrollWheelWkaeupHour.initialize();
    for (int i = 0; i < scrollWheelWkaeupHourListItems.getNumberOfDrawables(); i++)
    {
        scrollWheelWkaeupHourListItems[i].initialize();
    }
}

void WakeupSettingScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonCancel)
    {
        //ReturnToMain
        //When buttonCancel clicked change screen to MainScreen
        //Go to MainScreen with screen transition towards West
        application().gotoMainScreenScreenSlideTransitionWest();
    }
}

void WakeupSettingScreenViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &scrollWheelWkaeupMinListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        WakeupHour* cc = (WakeupHour*)d;
        scrollWheelWkaeupMinUpdateItem(*cc, itemIndex);
    }
    if (items == &scrollWheelWkaeupHourListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        WakeupHour* cc = (WakeupHour*)d;
        scrollWheelWkaeupHourUpdateItem(*cc, itemIndex);
    }
}
