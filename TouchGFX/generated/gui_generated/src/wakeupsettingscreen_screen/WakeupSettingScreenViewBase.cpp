/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/wakeupsettingscreen_screen/WakeupSettingScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

WakeupSettingScreenViewBase::WakeupSettingScreenViewBase() :
    buttonCallback(this, &WakeupSettingScreenViewBase::buttonCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    background.setXY(0, 0);
    background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_WAKEUPSETTINGSCREEN_ID));

    buttonCancel.setXY(14, 7);
    buttonCancel.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTONCANCELDONERELEASED_ID), touchgfx::Bitmap(BITMAP_BUTTONCANCELDONEPRESSED_ID));
    buttonCancel.setLabelText(touchgfx::TypedText(T___SINGLEUSE_DA0Y));
    buttonCancel.setLabelColor(touchgfx::Color::getColorFromRGB(51, 51, 51));
    buttonCancel.setLabelColorPressed(touchgfx::Color::getColorFromRGB(17, 17, 17));
    buttonCancel.setAlpha(230);
    buttonCancel.setAction(buttonCallback);

    buttonDone.setXY(421, 7);
    buttonDone.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTONCANCELDONERELEASED_ID), touchgfx::Bitmap(BITMAP_BUTTONCANCELDONEPRESSED_ID));
    buttonDone.setLabelText(touchgfx::TypedText(T___SINGLEUSE_BVCT));
    buttonDone.setLabelColor(touchgfx::Color::getColorFromRGB(51, 51, 51));
    buttonDone.setLabelColorPressed(touchgfx::Color::getColorFromRGB(17, 17, 17));
    buttonDone.setAlpha(230);
    buttonDone.setAction(buttonCallback);

    toggleButtonAlarmUse.setXY(249, 188);
    toggleButtonAlarmUse.setVisible(false);
    toggleButtonAlarmUse.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_OFF_ID), touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_ON_ID));
    toggleButtonAlarmUse.setAlpha(200);

    textAreaAlarmUse.setXY(33, 198);
    textAreaAlarmUse.setVisible(false);
    textAreaAlarmUse.setColor(touchgfx::Color::getColorFromRGB(17, 17, 17));
    textAreaAlarmUse.setLinespacing(0);
    textAreaAlarmUse.setAlpha(230);
    textAreaAlarmUse.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FD14));

    toggleButtonLightUse.setXY(315, 169);
    toggleButtonLightUse.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_OFF_ID), touchgfx::Bitmap(BITMAP_BLUE_TOGGLEBARS_TOGGLE_ROUND_LARGE_BUTTON_ON_ID));
    toggleButtonLightUse.setAlpha(200);

    textAreaLightUse.setXY(33, 176);
    textAreaLightUse.setColor(touchgfx::Color::getColorFromRGB(17, 17, 17));
    textAreaLightUse.setLinespacing(0);
    textAreaLightUse.setAlpha(230);
    textAreaLightUse.setTypedText(touchgfx::TypedText(T___SINGLEUSE_N3EO));

    textAreaWakeupAt.setXY(33, 96);
    textAreaWakeupAt.setColor(touchgfx::Color::getColorFromRGB(17, 17, 17));
    textAreaWakeupAt.setLinespacing(0);
    textAreaWakeupAt.setAlpha(230);
    textAreaWakeupAt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3IFJ));

    textAreaHour.setXY(168, 97);
    textAreaHour.setColor(touchgfx::Color::getColorFromRGB(17, 17, 17));
    textAreaHour.setLinespacing(0);
    textAreaHour.setAlpha(230);
    Unicode::snprintf(textAreaHourBuffer, TEXTAREAHOUR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_F9FY).getText());
    textAreaHour.setWildcard(textAreaHourBuffer);
    textAreaHour.resizeToCurrentText();
    textAreaHour.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PXFO));

    textAreaMinute.setXY(215, 96);
    textAreaMinute.setColor(touchgfx::Color::getColorFromRGB(17, 17, 17));
    textAreaMinute.setLinespacing(0);
    textAreaMinute.setAlpha(230);
    Unicode::snprintf(textAreaMinuteBuffer, TEXTAREAMINUTE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TKPK).getText());
    textAreaMinute.setWildcard(textAreaMinuteBuffer);
    textAreaMinute.resizeToCurrentText();
    textAreaMinute.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VP4A));

    buttonMinDown.setXY(211, 124);
    buttonMinDown.setBitmaps(touchgfx::Bitmap(BITMAP_DOWN_ARROW_ID), touchgfx::Bitmap(BITMAP_DOWN_ARROW_PRESSED_ID));
    buttonMinDown.setAction(buttonCallback);

    buttonMinUp.setXY(211, 77);
    buttonMinUp.setBitmaps(touchgfx::Bitmap(BITMAP_UP_ARROW_ID), touchgfx::Bitmap(BITMAP_UP_ARROW_PRESSED_ID));
    buttonMinUp.setAction(buttonCallback);

    buttonHourDown.setXY(165, 124);
    buttonHourDown.setBitmaps(touchgfx::Bitmap(BITMAP_DOWN_ARROW_ID), touchgfx::Bitmap(BITMAP_DOWN_ARROW_PRESSED_ID));
    buttonHourDown.setAction(buttonCallback);

    buttonHourUp.setXY(165, 77);
    buttonHourUp.setBitmaps(touchgfx::Bitmap(BITMAP_UP_ARROW_ID), touchgfx::Bitmap(BITMAP_UP_ARROW_PRESSED_ID));
    buttonHourUp.setAction(buttonCallback);

    textAreaColon.setXY(200, 94);
    textAreaColon.setColor(touchgfx::Color::getColorFromRGB(17, 17, 17));
    textAreaColon.setLinespacing(0);
    textAreaColon.setAlpha(230);
    textAreaColon.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TBGZ));

    digitalClock.setPosition(200, 4, 80, 20);
    digitalClock.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    digitalClock.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PR7W));
    digitalClock.displayLeadingZeroForHourIndicator(true);
    digitalClock.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR);
    digitalClock.setTime24Hour(10, 10, 0);

    add(__background);
    add(background);
    add(buttonCancel);
    add(buttonDone);
    add(toggleButtonAlarmUse);
    add(textAreaAlarmUse);
    add(toggleButtonLightUse);
    add(textAreaLightUse);
    add(textAreaWakeupAt);
    add(textAreaHour);
    add(textAreaMinute);
    add(buttonMinDown);
    add(buttonMinUp);
    add(buttonHourDown);
    add(buttonHourUp);
    add(textAreaColon);
    add(digitalClock);
}

void WakeupSettingScreenViewBase::setupScreen()
{

}

void WakeupSettingScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonCancel)
    {
        //ReturnToMain
        //When buttonCancel clicked change screen to MainScreen
        //Go to MainScreen with screen transition towards West
        application().gotoMainScreenScreenSlideTransitionWest();
    }
    else if (&src == &buttonDone)
    {
        //Done
        //When buttonDone clicked call virtual function
        //Call buttonDoneClicked
        buttonDoneClicked();
    }
    else if (&src == &buttonMinDown)
    {
        //MinDown
        //When buttonMinDown clicked call virtual function
        //Call buttonMinDownClicked
        buttonMinDownClicked();
    }
    else if (&src == &buttonMinUp)
    {
        //MinUp
        //When buttonMinUp clicked call virtual function
        //Call buttonMinUpClicked
        buttonMinUpClicked();
    }
    else if (&src == &buttonHourDown)
    {
        //HourDown
        //When buttonHourDown clicked call virtual function
        //Call buttonHourDownClicked
        buttonHourDownClicked();
    }
    else if (&src == &buttonHourUp)
    {
        //HourUp
        //When buttonHourUp clicked call virtual function
        //Call buttonHourUpClicked
        buttonHourUpClicked();
    }
}
